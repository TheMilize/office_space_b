version: '3.8'

services:
  frontend:
    build:
      context: ../office_space_f
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - CORS_ORIGIN=http://localhost
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=office_space
      - DB_HOST=postgres
      - DB_PORT=5432
      - JWT_SECRET=your_jwt_secret
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: office_space
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d office_space"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 